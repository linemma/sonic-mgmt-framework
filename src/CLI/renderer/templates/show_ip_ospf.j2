{% if 'vrfName' in json_output %}
{% if json_output['vrfName'] != 'default' %}
VRF Name: {{json_output['vrfName']}}
{% endif -%}
{% endif %}
 OSPF Routing Process, Router ID: {{json_output['openconfig-network-instance:ospfv2']['global']['state']['router-id']}}
 Supports only single TOS (TOS0) routes
 This implementation conforms to RFC2328
 {% if json_output['openconfig-network-instance:ospfv2']['global']['state']['openconfig-ospfv2-ext:ospf-rfc1583-compatible'] == True %}
 RFC1583Compatibility flag is enabled
{% else %}
 RFC1583Compatibility flag is disabled
{% endif %}
{% if json_output['openconfig-network-instance:ospfv2']['global']['state']['openconfig-ospfv2-ext:opaque-lsa-capability'] == True %}
 OpaqueCapability flag is enabled
{% else %}
 OpaqueCapability flag is disabled
{% endif %}
 Initial SPF scheduling delay {{json_output['openconfig-network-instance:ospfv2']['global']['timers']['spf']['state'] ['openconfig-ospfv2-ext:throttle-delay']}} millisec(s) 
 Minimum hold time between consecutive SPFs {{json_output['openconfig-network-instance:ospfv2']['global']['timers']['spf']['state'] ['initial-delay']}} millisec(s) 
 Maximum hold time between consecutive SPFs {{json_output['openconfig-network-instance:ospfv2']['global']['timers']['spf']['state'] ['maximum-delay']}} millisec(s)
 Hold time multiplier is currently {{json_output['openconfig-network-instance:ospfv2']['global']['state']['openconfig-ospfv2-ext:hold-time-multiplier']}}
{% if 'openconfig-ospfv2-ext:last-spf-execution-time' in json_output['openconfig-network-instance:ospfv2'] ['global']['state']%}
 {% set time = json_output['openconfig-network-instance:ospfv2']['global']['state']['openconfig-ospfv2-ext:last-spf-execution-time']|int %}
 SPF algorithm last executed {{'%dd%dh%dm'|format(time/86400, (time%86400)/3600, ((time%86400)%3600)/60 )}} ago
 Last SPF duration {{json_output['openconfig-network-instance:ospfv2']['global']['state']['openconfig-ospfv2-ext:last-spf-duration']/1000}}s 
{% else %}
 SPF algorithm has not been run
{% endif %}
 {% if json_output['openconfig-network-instance:ospfv2']['global']['timers']['spf']['state'] ['openconfig-ospfv2-ext:spf-timer-due'] != 0 %}
 SPF timer due in {{json_output['openconfig-network-instance:ospfv2']['global']['timers']['spf']['state'] ['openconfig-ospfv2-ext:spf-timer-due']}} secs.
{% else %}
 SPF timer is inactive
{% endif %}
{% if 'openconfig-network-instance:ospfv2' in json_output %}
{% if 'global' in json_output['openconfig-network-instance:ospfv2'] %}
{% if 'timers' in json_output['openconfig-network-instance:ospfv2']['global'] %}
{% if 'lsa-generation' in json_output['openconfig-network-instance:ospfv2']['global']['timers'] %}
{% if 'state' in json_output['openconfig-network-instance:ospfv2']['global']['timers']['lsa-generation'] %}
 LSA minimum interval {{json_output['openconfig-network-instance:ospfv2']['global']['timers']['lsa-generation']['state']['openconfig-ospfv2-ext:lsa-min-interval-timer']}} msecs  
 LSA minimum arrival {{json_output['openconfig-network-instance:ospfv2']['global']['timers']['lsa-generation']['state']['openconfig-ospfv2-ext:lsa-min-arrival-timer']}} msecs
 Write Multiplier set to {{json_output['openconfig-network-instance:ospfv2']['global']['state']['openconfig-ospfv2-ext:write-multiplier']}}
 {% set refresh_time = json_output['openconfig-network-instance:ospfv2']['global']['timers']['lsa-generation']['state']['openconfig-ospfv2-ext:refresh-timer'] %}
 Refresh timer {{'%2d'|format(refresh_time/1000)}} secs
{% endif %}
{% endif %}
{% endif %}
{% endif %}
{% endif %}
{% if 'openconfig-network-instance:ospfv2' in json_output %}
{% if 'global' in json_output['openconfig-network-instance:ospfv2'] %}
{% if 'state' in json_output['openconfig-network-instance:ospfv2']['global'] %}
 Number of external LSA {{json_output['openconfig-network-instance:ospfv2']['global']['state']['openconfig-ospfv2-ext:external-lsa-count']}}. Checksum Sum 0x{{'%8s'|format(json_output['openconfig-network-instance:ospfv2']['global']['state']['openconfig-ospfv2-ext:external-lsa-checksum'].rjust(8,'0'))}}
 Number of opaque AS LSA {{json_output['openconfig-network-instance:ospfv2']['global']['state']['openconfig-ospfv2-ext:opaque-lsa-count']}}. Checksum Sum 0x{{'%8s'|format(json_output['openconfig-network-instance:ospfv2']['global']['state']['openconfig-ospfv2-ext:opaque-lsa-checksum'].rjust(8,'0'))}}
 Number of areas attached to this router: {{json_output['openconfig-network-instance:ospfv2']['global']['state']['openconfig-ospfv2-ext:area-count']}}
{% endif %}
{% endif %}
{% endif %}

{% if json_output['openconfig-network-instance:ospfv2']['global']['state']['openconfig-ospfv2-ext:area-count'] != "0" %}
{% set vars = {'area_id': "0", 'total_interface': "0", 'active_interface': "0", 'fully_adj_nbrs': "0", 'auth_type': "no authentication", 
        'spf_algo_executed_count': "0", 'all_lsa_count': "0", 'router_lsa_count': "0", 'router_lsa_checksum': "0", 'network_lsa_count': "0", 
        'network_lsa_checksum': "0", 'summary_lsa_count': "0", 'summary_lsa_checksum': "0", 'asbr_summary_lsa_count': "0",  
        'asbr_summary_lsa_checksum': "0", 'nssa_lsa_count': "0",'nssa_lsa_checksum': "0", 'opaque_link_lsa_count': "0", 'opaque_link_lsa_checksum': "0", 
        'opaque_area_lsa_count': "0", 'opaque_lsa_checksum': "0"} %}
{% if 'area' in json_output['openconfig-network-instance:ospfv2']['areas'] %}
{% set area_list = json_output['openconfig-network-instance:ospfv2']['areas']['area'] %}
{% endif %}
{% for areainfo in area_list %}
    {% if 'identifier' in areainfo %}
    {% if vars.update({'area_id':areainfo['identifier']}) %}{% endif %}
    {% endif %}
    {% if vars.area_id == '0.0.0.0' %}
    {% if vars.update({'backbone':'(Backbone)'})  %}{% endif %}
    {% else %}
    {% if vars.update({'backbone':' '})  %}{% endif %}
    {% endif %}
    {% if "openconfig-ospfv2-ext:interface-count" in areainfo['state'] %}
    {% if vars.update({'total_interface':areainfo['state']['openconfig-ospfv2-ext:interface-count']}) %}{% endif %}
    {% endif %}
    {% if "openconfig-ospfv2-ext:active-interface-count" in areainfo['state'] %}
    {% if vars.update({'active_interface':areainfo['state']['openconfig-ospfv2-ext:active-interface-count']}) %}{% endif %}
    {% endif %}
    {% if "openconfig-ospfv2-ext:adjacency-count" in areainfo['state'] %}
    {% if vars.update({'fully_adj_nbrs':areainfo['state']['openconfig-ospfv2-ext:adjacency-count']}) %}{% endif %}
    {% endif %}
    {% if 'openconfig-ospfv2-ext:authentication-type' in areainfo['state'] %}
    {% if vars.update({'auth_type':'no authentication'}) %}{% endif %}
    {% endif %}
    {% if "openconfig-ospfv2-ext:spf-execution-count" in areainfo['state'] %}
    {% if vars.update({'spf_algo_executed_count':areainfo['state']['openconfig-ospfv2-ext:spf-execution-count']}) %}{% endif %}
    {% endif %}
    {% if "openconfig-ospfv2-ext:lsa-count" in areainfo['state'] %}
    {% if vars.update({'all_lsa_count':areainfo['state']['openconfig-ospfv2-ext:lsa-count']}) %}{% endif %}
    {% endif %}
    {% if "openconfig-ospfv2-ext:router-lsa-count" in areainfo['state'] %}
    {% if vars.update({'router_lsa_count':areainfo['state']['openconfig-ospfv2-ext:router-lsa-count']}) %}{% endif %}
    {% endif %}
    {% if "openconfig-ospfv2-ext:router-lsa-checksum" in areainfo['state'] %}
    {% if vars.update({'router_lsa_checksum':areainfo['state']['openconfig-ospfv2-ext:router-lsa-checksum']}) %}{% endif %}
    {% endif %}
    {% if "openconfig-ospfv2-ext:network-lsa-count" in areainfo['state'] %}
    {% if vars.update({'network_lsa_count':areainfo['state']['openconfig-ospfv2-ext:network-lsa-count']}) %}{% endif %}
    {% endif %}
    {% if "openconfig-ospfv2-ext:network-lsa-checksum" in areainfo['state'] %}
    {% if vars.update({'network_lsa_checksum':areainfo['state']['openconfig-ospfv2-ext:network-lsa-checksum']}) %}{% endif %}
    {% endif %}
    {% if "openconfig-ospfv2-ext:summary-lsa-count" in areainfo['state'] %}
    {% if vars.update({'summary_lsa_count':areainfo['state']['openconfig-ospfv2-ext:summary-lsa-count']}) %}{% endif %}
    {% endif %}
    {% if "openconfig-ospfv2-ext:summary-lsa-checksum" in areainfo['state'] %}
    {% if vars.update({'summary_lsa_checksum':areainfo['state']['openconfig-ospfv2-ext:summary-lsa-checksum']}) %}{% endif %}
    {% endif %}
    {% if "openconfig-ospfv2-ext:asbr-summary-lsa-count" in areainfo['state'] %}
    {% if vars.update({'asbr_summary_lsa_count':areainfo['state']['openconfig-ospfv2-ext:asbr-summary-lsa-count']}) %}{% endif %}
    {% endif %}
    {% if "openconfig-ospfv2-ext:asbr-summary-lsa-checksum" in areainfo['state'] %}
    {% if vars.update({'asbr_summary_lsa_checksum':areainfo['state']['openconfig-ospfv2-ext:asbr-summary-lsa-checksum']}) %}{% endif %}
    {% endif %}
    {% if "openconfig-ospfv2-ext:nssa-lsa-count" in areainfo['state'] %}
    {% if vars.update({'nssa_lsa_count':areainfo['state']['openconfig-ospfv2-ext:nssa-lsa-count']}) %}{% endif %}
    {% endif %}
    {% if "openconfig-ospfv2-ext:nssa-lsa-checksum" in areainfo['state'] %}
    {% if vars.update({'nssa_lsa_checksum':areainfo['state']['openconfig-ospfv2-ext:nssa-lsa-checksum']}) %}{% endif %}
    {% endif %}
    {% if "openconfig-ospfv2-ext:opaque-area-lsa-count" in areainfo['state'] %}
    {% if vars.update({'opaque_area_lsa_count':areainfo['state']['openconfig-ospfv2-ext:opaque-area-lsa-count']}) %}{% endif %}
    {% endif %}
    {% if "openconfig-ospfv2-ext:opaque-area-lsa-checksum" in areainfo['state'] %}
    {% if vars.update({'opaque_area_lsa_checksum':areainfo['state']['openconfig-ospfv2-ext:opaque-area-lsa-checksum']}) %}{% endif %}
    {% endif %}
    {% if "openconfig-ospfv2-ext:opaque-link-lsa-count" in areainfo['state'] %}
    {% if vars.update({'opaque_link_lsa_count':areainfo['state']['openconfig-ospfv2-ext:opaque-link-lsa-count']}) %}{% endif %}
    {% endif %}
    {% if "openconfig-ospfv2-ext:opaque-link-lsa-checksum" in areainfo['state'] %}
    {% if vars.update({'opaque_link_lsa_checksum':areainfo['state']['openconfig-ospfv2-ext:opaque-link-lsa-checksum']}) %}{% endif %}
    {% endif %}
 Area ID: {{'%s %s'|format(vars.area_id, vars.backbone)}}
   Number of interfaces in this area: Total: {{'%d'|format(vars.total_interface)}} , Active: {{'%d'|format(vars.active_interface)}}
   Number of fully adjacent neighbors in this area: {{'%d'|format(vars.fully_adj_nbrs)}}
   Area has {{'%s'|format(vars.auth_type)}}
   SPF algorithm executed {{'%s'|format(vars.spf_algo_executed_count)}} times
   Number of LSA {{'%s'|format(vars.all_lsa_count)}}
   Number of router LSA {{'%s'|format(vars.router_lsa_count)}}. Checksum Sum 0x{{'%8s'|format((vars.router_lsa_checksum).rjust(8,'0'))}}
   Number of network LSA {{'%s'|format(vars.network_lsa_count)}}. Checksum Sum 0x{{'%8s'|format((vars.network_lsa_checksum).rjust(8,'0'))}}
   Number of summary LSA {{'%s'|format(vars.summary_lsa_count)}}. Checksum Sum 0x{{'%8s'|format((vars.summary_lsa_checksum).rjust(8,'0'))}}
   Number of ASBR summary LSA {{'%s'|format(vars.asbr_summary_lsa_count)}}. Checksum Sum 0x{{'%8s'|format((vars.asbr_summary_lsa_checksum).rjust(8,'0'))}}
   Number of NSSA LSA {{'%s'|format(vars.nssa_lsa_count)}}. Checksum Sum 0x{{'%8s'|format((vars.nssa_lsa_checksum).rjust(8,'0'))}}
   Number of opaque link LSA {{'%s'|format(vars.opaque_link_lsa_count)}}. Checksum Sum 0x{{'%8s'|format((vars.opaque_link_lsa_checksum).rjust(8,'0'))}}
   Number of opaque area LSA {{'%s'|format(vars.opaque_area_lsa_count)}}. Checksum Sum 0x{{'%8s'|format((vars.opaque_area_lsa_checksum).rjust(8,'0'))}}

{% endfor %}
{% endif %}

